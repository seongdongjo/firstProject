#)문자열, 문자 받고 해당 문자가 문자열에서 몇번나오는지?
ex) compucc -> c가 3번

class Main{	
	public int solution(String str, char t){
		int answer=0;
		str=str.toUpperCase();
		t=Character.toUpperCase(t);
		//System.out.println(str+" "+t);
		/*for(int i=0; i<str.length(); i++){
			if(str.charAt(i)==t) answer++;
		}*/
		
		//foreach쓸려면 배열 등 이 와야해서 str.toCharArray로 배열로만들었다 
		for(char x : str.toCharArray()){
			if(x==t) answer++;
		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main(); //함수를 호출하기위해 객체생성(Main)
		Scanner kb = new Scanner(System.in);
		String str=kb.next(); //문자열 입력받고
		char c=kb.next().charAt(0); //문자하나 입력받고
		System.out.print(T.solution(str, c));
	}
}
========================================================
#)대소문자 변환
ex) StuDY -> sTUdy

import java.util.*;
class Main {	
	public String solution(String str){
		String answer="";
		for(char x : str.toCharArray()){
			if(Character.isLowerCase(x)) answer+=Character.toUpperCase(x);
			else answer+=Character.toLowerCase(x);

		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.next();
		System.out.print(T.solution(str));
	}
}

#)또 다른 풀이
#)소문자 97~122, 대문자 65~90 (소문자-32 = 대문자)
import java.util.*;
class Main {	
	public String solution(String str){
		String answer="";
		for(char x : str.toCharArray()){
			if(x>=97 && x<=122) answer+=(char)(x-32); //char없으면 숫자로계산됨
			else answer+=(char)(x+32);
		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.next();
		System.out.print(T.solution(str));
	}
}
=========================================================
#)문장을 입력받아 가장 긴단어 출력, 길이가 같으면 젤앞의 단어 출력
import java.util.*;
class Main {	
	public String solution(String str){
		String answer="";
		int m=Integer.MIN_VALUE;
		String[] s = str.split(" "); //공백을 기준으로 잘라서 s에 다 넣는다.
		for(String x : s){
			int len=x.length();
			if(len>m){
				m=len; //제일 긴 길이 저장
				answer=x;
			}
		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.nextLine();
		System.out.print(T.solution(str));
	}
}


------------
#)또 다른 풀이
import java.util.*;
class Main {	
	public String solution(String str){
		String answer="";
		int m=Integer.MIN_VALUE, pos;
		while((pos=str.indexOf(' '))!=-1){
			String tmp=str.substring(0, pos);
			int len=tmp.length();
			if(len>m){
				m=len;
				answer=tmp;
			}
			str=str.substring(pos+1);
		}
		if(str.length()>m) answer=str;
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.nextLine();
		System.out.print(T.solution(str));
	}
}

==========================================================
#)
import java.util.*;
class Main {	
	public String solution(String str){
		String answer="";
		int m=Integer.MIN_VALUE;
		String[] s = str.split(" "); // it is time to study이렇게 분리해서 들어간다
		for(String x : s){
			int len=x.length();
			if(len>m){
				m=len;
				answer=x;
			}
		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.nextLine();
		System.out.print(T.solution(str));
	}
}


------------
#)또다른풀이
import java.util.*;
class Main {	
	public String solution(String str){
		String answer="";               //01234 
		int m=Integer.MIN_VALUE, pos;   //it is 
		while((pos=str.indexOf(' '))!=-1){
			String tmp=str.substring(0, pos); //pos전까지 (띄어쓰기 전까지)
			int len=tmp.length();
			if(len>m){ // >=로 해버리면 뒤쪽에서 알파벳길이 같을 때 뒤를 반환하기때문에, 문제에서는 젤 앞쪽에 발견되는걸 구하라했으니
				m=len;
				answer=tmp;
			}
			str=str.substring(pos+1); //띄어쓰기 이후부터 뒤에 다 
		}
		if(str.length()>m) answer=str; //마지막단어처리(마지막단어는 while문에서 공백이 없어서 끝나버리니까 이거추가)
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.nextLine();
		System.out.print(T.solution(str));
	}
}
==========================================================
#)문자 뒤집기
import java.util.*;
class Main {	
	public ArrayList<String> solution(int n, String[] str){
		ArrayList<String> answer=new ArrayList<>(); 
		for(String x : str){ //stringBuilder도 지원하는 메서드가 많다.
			//String은 값자체는 못바꾸기때문에 객체를 계속만들어야한다. 근데
			//StringBuilder는 해당 값에서 바꿀수있다.
			String tmp=new StringBuilder(x).reverse().toString();
			answer.add(tmp);
		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt();
		String[] str=new String[n];
		for(int i=0; i<n; i++){
			str[i]=kb.next();
		}
		for(String x : T.solution(n, str)){
			System.out.println(x);
		}
	}
}
//결과:
//3
//good
//time
//Big
//doog
//emit
//giB

#)또 다른풀이
//lt          rt 
//0  1  2  3  4
//s  t  u  d  y
import java.util.*;
class Main {	
	public ArrayList<String> solution(int n, String[] str){
		ArrayList<String> answer=new ArrayList<>(); 
		for(String x : str){ //str에는 time, dog, good
			char[] s=x.toCharArray();
			int lt=0, rt=x.length()-1;
			while(lt<rt){
				char tmp=s[lt];
				s[lt]=s[rt];
				s[rt]=tmp;
				lt++;
				rt--;
			}
			String tmp=String.valueOf(s); //valueOf는 static메서드라 String.으로접근
			answer.add(tmp);
		}
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt();
		String[] str=new String[n];
		for(int i=0; i<n; i++){
			str[i]=kb.next();
		}
		for(String x : T.solution(n, str)){
			System.out.println(x);
		}
	}
}
==========================================================
#)특정문자뒤집기(알파벳만)
#)특수문자는 그대로
#)a#b!ge*t@s -> s#t!eg*b@a

import java.util.*;
class Main {	
	public String solution(String str){
		String answer;
		char[] s=str.toCharArray();
		int lt=0, rt=str.length()-1;
		while(lt<rt){
			if(!Character.isAlphabetic(s[lt])) lt++; //lt가 특수문자면
			else if(!Character.isAlphabetic(s[rt])) rt--; //rt가 특수문자면
			else{ //특수문자가 아니면 둘다 알파벳이니까 교환
				char tmp=s[lt];
				s[lt]=s[rt];
				s[rt]=tmp;
				lt++;
				rt--;
			}
		}
		answer=String.valueOf(s); //char을 String으로 전환
		return answer;
	}

	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str=kb.next();
		System.out.println(T.solution(str));
	}
}


==========================================================
package codingTest;
import java.util.*;
//한개의 문자열을 입력받고 또 , 받은 해당 문자가 몇번나오는지? (대소문자 구분xx)

public class Find {
	public int solution(String str, char t) {
		//어짜피 대,소문자 구분안하니까 받은 문자열을 다 대문자로 바꿔버리자
		int answer=0;
		str = str.toUpperCase();
		t =Character.toUpperCase(t); //받은 문자도 대문자로 바꾸기
		System.out.println(str + " " + t); //대문자로 출력된걸 확인
		
		//이제 몇개인지 찾아보자
		for(int i = 0; i<str.length(); i++) {
			if(str.charAt(i)==t) answer ++; //문자열을 charAt을 통해 하나씩 문자추출
		}
		return answer;
	}
	public static void main(String[] args) {
		Find T = new Find();
		Scanner sc = new Scanner(System.in);
		
		System.out.print("문자열 입력: ");
		String str = sc.next(); //문자열 읽기
		
		System.out.print("문자 입력: ");
		char c =sc.next().charAt(0); //next는 스트링형식이라서 점(.)으로 0번문자가져오기
		
		System.out.print(T.solution(str, c));	
	}
}
-------------------------------------------------------
#)또 다른 풀이
package codingTest;
import java.util.*;
//한개의 문자열을 입력받고 또 , 받은 해당 문자가 몇번나오는지? (대소문자 구분xx)

public class Find { 
	public int solution(String str, char t) {
		//어짜피 대,소문자 구분안하니까 받은 문자열을 다 대문자로 바꿔버리자
		int answer=0;
		str = str.toUpperCase();
		t =Character.toUpperCase(t); //받은 문자도 대문자로 바꾸기
		
		for(char x : str.toCharArray()) { //for:each문에서는 배열이 들어가야되서 배열로 바꾸는 toCharArray
			if(x==t) answer++;
		}
		
		return answer;
	}
	
	
	public static void main(String[] args) {
		Find T = new Find(); //함수에 static붙이면 객체 생성필요 xxx
		Scanner sc = new Scanner(System.in);
		
		String str = sc.next(); //문자열 읽기
		char c =sc.next().charAt(0); //next는 스트링형식이라서 점(.)으로 0번문자가져오기
		
		System.out.print(T.solution(str, c));
		
	}

}

-----------------------------------------------------------------------
package codingTest;

import java.util.*;

//입력받은 문자를 대문자는 소문자로, 소문자는 대문자로

public class Updopper {
	public String solution(String str) {
		String answer = "";
		for(char x : str.toCharArray()) {
			//x가 소문자냐 그러면 대문자로 바꿔서 누적
			if(Character.isLowerCase(x)) answer+=Character.toUpperCase(x);  
			else answer += Character.toLowerCase(x);
		}
		return answer;
	}
	
	
	public static void main(String[] args) {
		Updopper T = new Updopper();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}

}
-------------------------------------------------------------
#)또 다른풀이
package codingTest;

import java.util.*;

//입력받은 문자를 대문자는 소문자로, 소문자는 대문자로

public class Updopper {
	public String solution(String str) {
		String answer = "";
		for(char x : str.toCharArray()) {
			//소문자인지 확인하고 32빼서 대문자로 누적
			if(x>=97 && x<=121) answer+=(char)(x-32);
			else answer +=(x+32);
		}
		return answer;
	}
	public static void main(String[] args) {
		Updopper T = new Updopper();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}
}
-----------------------------------------------------------
package codingTest;
import java.util.*;
//문장(영어)을 받아서 첫줄에 가장 긴 단어를 출력. 긴단어가 여러개면 문장 속에서 가장 앞쪽에 위치한 단어를 출력


public class Length {
	public String solution(String str) {
		String answer="";
		int m=Integer.MIN_VALUE; //m에 가장작은 값넣기
		String[] s =str.split(" "); //공백을 기준으로 잘라서 배열에 저장 ("It","is","simple")
		for(String x : s) {
			//System.out.println(x);
			int len=x.length();
			if(len>m) {  //여기서 len >=m 으로 같다하면 안된다. 계속검색하다가 뒤쪽이랑 크기가 같으면 뒤쪽을 반환해서
				m=len;
				answer=x;  //가장긴 단어를 answer에 넣기
			}
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Length T = new Length();
		Scanner kb = new Scanner(System.in);
		System.out.print("문장 입력: ");
		String str = kb.nextLine(); //문장이니까 한줄입력
		System.out.println(T.solution(str));
	}

}
---------------------------------------------------------------
#)또 다른 풀이
package codingTest;
import java.util.*;
//문장(영어)을 받아서 첫줄에 가장 긴 단어를 출력. 긴단어가 여러개면 문장 속에서 가장 앞쪽에 위치한 단어를 출력


public class Length {
	public String solution(String str) {
		String answer="";
		int m=Integer.MIN_VALUE,pos; //m에 가장작은 값넣기
		while((pos=str.indexOf(' '))!=-1) { //띄어쓰기인덱스위치를 반환 즉 It is이면 2를 반환
			String tmp = str.substring(0,pos);
			int len=tmp.length();
			if(len>m) {
				m=len;
				answer=tmp;
			}
			str=str.substring(pos+1); //띄어쓰기 다음칸부터 다시
		}
			if(str.length()>m) answer=str; //마지막단어가 저장한 len보다 길다면 이렇게 처리해야된다.
			return answer;
		}
	
	public static void main(String[] args) {
		Length T = new Length();
		Scanner kb = new Scanner(System.in);
		System.out.print("문장 입력: ");
		String str = kb.nextLine(); //문장이니까 한줄입력
		System.out.println(T.solution(str));
	}
}
------------------------------------------------------------
#)입력한 단어의 개수를 입력받고 입력받은 영단어를 거꾸로 출력
package codingTest;

import java.util.ArrayList;
import java.util.Scanner;

public class Filpword {
	public ArrayList<String> solution(int n, String[] str) {
		ArrayList<String> answer = new ArrayList<>();
		for(String x : str) {
			//StringBuilder객체를 만드는 이유: 
			//String으로 객체를 만들면 toString이런거 하면 새로운객체를 계속만든다.
			//그래서 StringBuilder를 써서 replace, toString이런거 써도 하나의 객체만을 이용
			String tmp = new StringBuilder(x).reverse().toString();
			answer.add(tmp);
		}
		return answer;
	}
	public static void main(String[] args) {
		Filpword T = new Filpword();
		Scanner kb = new Scanner(System.in);
		System.out.print("입력할 단어 갯수: ");
		int n = kb.nextInt();
		String[] str = new String[n];
		for(int i=0; i<n; i++) {
			str[i] = kb.next(); //영단어 입력
		}
		for(String x : T.solution(n, str)) {
			System.out.println(x);
		}
	}
}
--------------------------------------------------------------
#)직접뒤집기
package codingTest;

import java.util.ArrayList;
import java.util.Scanner;

public class Filpword {
	public ArrayList<String> solution(int n, String[] str) {
		ArrayList<String> answer = new ArrayList<>();
		for(String x : str) {
			char[] s = x.toCharArray(); //문자배열로 바꾼다.
			int lt =0, rt=x.length()-1;
			while(lt<rt) {
				char tmp=s[lt];
				s[lt]=s[rt];
				s[rt]=tmp;
				lt++;
				rt--;
			}
			//valueOf는 객체없이 가능
			String tmp = String.valueOf(s); //s라는 문자열을 String화 시켜준다.
			answer.add(tmp);
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Filpword T = new Filpword();
		Scanner kb = new Scanner(System.in);
		System.out.print("입력할 단어 갯수: ");
		int n = kb.nextInt();
		String[] str = new String[n];
		for(int i=0; i<n; i++) {
			str[i] = kb.next(); //영단어 입력
		}
		for(String x : T.solution(n, str)) {
			System.out.println(x);
		}
	}
}
---------------------------------------------------------------------------
import java.util.Scanner;

//직접뒤집기, 특수문자면 뒤집지 말기
//lt, rt 중에 하나가 특수문자인지 확인해야된다. 그러면 특수문자면 무시하고 lt증가,
//rt가 특수문자면 rt가 감소

public class Filp {
	public String solution(String str) {
		String answer;
		char[] s = str.toCharArray(); //문자배열만들기
		int lt=0, rt=str.length()-1;
		
		while(lt<rt) {
			if(!Character.isAlphabetic(s[lt])) lt++; //s[lt]가 알파벳이 아니면 
			else if(!Character.isAlphabetic(s[rt])) rt--;
			else { //s[lt],s[rt]가 알파벳이면
				char tmp=s[lt];
				s[lt] = s[rt];
				s[rt] = tmp;
				lt++;
				rt--;
			}
		}
		answer = String.copyValueOf(s);
		return answer;
	}
	
	
	public static void main(String[] args) {
		Filp T = new Filp();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}

}
--------------------------------------------------------------
#)중복문자 제거
package codingTest;

import java.util.Scanner;

public class Collapse {
	public String solution(String str) {
		String answer="";
		for(int i = 0; i<str.length(); i++) {
			//indexOf는 0부터 계속시작(처음발견된 문자는 i와 str.indexOf(str.charAt(i) 두개의 값이 같다.
			//앞에 중복된 문자가 있으면  indexOf는 0으로 출력된다.
			//중복이 아니면 해당 인덱스위치 반환
			//str.charAt(i)와 i가 같다는것은 처음이자 중복되지않는걸 answer에 저장한다는거다
			//System.out.println(str.charAt(i)+" "+i+" "+str.indexOf(str.charAt(i)));
			// k 0 0
			// s 1 1 
			// e 2 2
			// k 3 0   	
			if(str.indexOf(str.charAt(i))==i) answer+=str.charAt(i);
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Collapse T= new Collapse();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}

}
-----------------------------------------------------------------------
#)회문문자열인지 검사 (대소문자 구분xx)
ex) Goog 와 GOOG 같다.
package codingTest;

import java.util.Scanner;

public class Circular {
	public String solution(String str) {
		String answer="YES";
		str=str.toUpperCase();
		int len = str.length();
		for(int i=0; i<len/2; i++) {
			if(str.charAt(i)!=str.charAt(len-i-1)) return "NO";
		}
	
		return answer;
	}
	public static void main(String[] args) {
		Circular T = new Circular();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}

}
-----------------------------------------------------------------
#)또다른풀이
package codingTest;

import java.util.Scanner;

public class Circular {
	public String solution(String str) {
		String answer="NO";
		//tmp에는 뒤집은 str이 들어간다.
		String tmp = new StringBuilder(str).reverse().toString();
		//str은 안뒤집어진거, equalsIgnore은 대,소문자 구분안하고 비교
		if(str.equalsIgnoreCase(tmp)) answer="YES";
		
		return answer;
	}
	public static void main(String[] args) {
		Circular T = new Circular();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}
}
----------------------------------------------------------------
#)앞에서 읽을 때나 뒤에서 읽을 떄나 같은 문자열을 팰린드롬이라고 한다.
#)time7; study, ydust; 7emit;; 이렇게 들어와도 YES를 출력해야된다.
#)즉, 알파벳 말고 나머지 들은 다 제거 해야된다.(대소문자 구분xx)
package codingTest;

import java.util.Scanner;

public class Main {
	public String solution(String s) {
		String answer="NO";
		//대문자로 바꾼후, 알파벳빼고 다제거(대문자A-Z아니면 빈문자화시켜라)
		s=s.toUpperCase().replaceAll("[^A-Z]","");
		String tmp = new StringBuilder(s).reverse().toString();
		if(s.equals(tmp)) answer="YES";
		
		return answer;
	}
	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		String str = kb.nextLine();
		System.out.println(T.solution(str));
	}
}
----------------------------------------------------------
#)알파벳과 숫자가 섞에 있는 문자열이 주어지면 숫자만 추출하여 그 순서대로 자연수를 만든다.
#)tae01aex23 -> 0123 -> 123으로 출력되야한다.(앞에 0은 제외)
단, 문자열의 길이는 100을 넘지않게

package codingTest;

import java.util.Scanner;

public class Grasp {
	public int solution(String s) {
		int answer = 0;
		for(char x : s.toCharArray()) {
			//이 범위에 있으면 문자숫자(0~9) , 맨앞에 0이오면 48을 빼고 0을 곱함으로써 0은 무시
			//누적하기
			if(x>=48 && x<=57) answer=answer*10+(x-48);
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Grasp T = new Grasp();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}
}
-----------------------------------------------------------------------
#)또 다른풀이
package codingTest;

import java.util.Scanner;

public class Grasp {
	public int solution(String s) {
		String answer = "";
		for(char x : s.toCharArray()) {
			//x가 숫자면
			if(Character.isDigit(x)) answer+=x;
		}
		return Integer.parseInt(answer); //앞에 숫자가 와도 무시
	}
	
	public static void main(String[] args) {
		Grasp T = new Grasp();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}
}
-------------------------------------------------------------------
package function;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

public class Quiz01 {
        public static void main(String[] args) {
                // 주민등록번호 13자리를 입력받으세요
                // 주민등록번호 앞자리와 뒷자리를 별도의 문자열로 입력받으세요
                // 입력받은 주민등록번호를 함수에게 전달하세요
                // 함수는 전달받은 앞자리와 뒷자리를 이용하여 출생년도 4자리, 월, 일, 성별을 문자열로 구성하고 반환하세요
                
                Scanner sc = new Scanner(System.in);
                String num1, num2, input;
                
                System.out.print("주민등록번호 입력 (13자리, -없이 입력) : ");
                input = sc.nextLine();
                num1 = input.substring(0, 6);
                num2 = input.substring(6);
                System.out.println(num1 + ", " + num2);
                
                String msg = getIdNumberData(num1, num2);
                String msg2 = getIdNumberData(Integer.parseInt(num1), Integer.parseInt(num2));
                // 자바에서는 클래스 단위로 코드를 읽어서 컴파일 이후 실행하기 때문에
                // 함수의 정의가 아래쪽에 있어도 상관없다
                
                System.out.println(msg);
                System.out.println(msg2);
                
                sc.close();
        }

        static String getIdNumberData(int num1, int num2) { //num1에는 970103, num2에는 1231121(뒷주민번호)
                // 정수형태로 처리하기
                int year, month, day, gNum;
                day = num1 % 100;
                num1 /= 100;  //num1에는 9701 이저장
                month = num1 % 100;
                year = num1 / 100;  // year에는 97이 저장
                year += 21 < year ? 1900 : 2000;
                gNum = num2 % 1000000;
                
                return String.format("%d년 %02d월 %02d일 출생한 %s입니다", 
                                year, month, day, gNum % 2 == 0 ? "여성" : "남성");
        }

        static String getIdNumberData(String num1, String num2) {
                // 문자열 관련 함수를 활용해서 처리하기
                int nowYear = Integer.parseInt(new SimpleDateFormat("yy").format(new Date()));
                String year = num1.substring(0, 2); //970103으로받음       // for(int i = 0; i < 2; i++)
                String month = num1.substring(2, 4);
                String day = num1.substring(4);
                String gender = Integer.parseInt(num2.substring(0, 1)) % 2 == 0 ? "여성" : "남성";
                year = Integer.parseInt(year) > nowYear ? "19" + year : "20" + year;
                
                return String.format("%s년 %s월 %s일 출생한 %s입니다", 
                                year, month, day, gender);
        }
}
----------------------------------------------------------------------------------------
#)가장짧은 문자거리
#)teacher 로 입력받고 e로 입력받으면 각문자가 e로부터 떨어진거리 구한다.
#)본인위치 가까운 왼쪽e로 부터 먼저 for문돌리고 다시 오른쪽기준으로하는 for문돌린다.
- P의 값(e와 떨어진거리)을 비교해서 작은값으로 교체한다.
#)e는 본인위치니까 0 그 후 e가 아닌것들은 e를 만날때까지 계속 +1증가

package codingTest;

import java.util.Scanner;

public class Distance {
	public int[] solution(String s, char t) {
		int[] answer = new int[s.length()];
		int p = 1000;
		for(int i=0; i<s.length(); i++) {
			if(s.charAt(i)==t) {
				p=0;
				answer[i]=p;
			}
			else {
				p++;
				answer[i]=p;
			}
		}
	p=1000;
	for(int i=s.length()-1; i>=0; i--) {
		if(s.charAt(i)==t) p=0;
		else {
			p++;
			answer[i]=Math.min(answer[i], p); //기존값과 p를 비교해서 작은값대입
		}
	}
		return answer;
	}
	
	public static void main(String[] args) {
		Distance T = new Distance();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		char c = kb.next().charAt(0);
		for(int x : T.solution(str, c)) {
			System.out.println(x+" ");
		}
	}
}
--------------------------------------------------------------------------
#)문자열압축
#)KKHSSSSSSSE -> K2HS7E 로 출력
package codingTest;

import java.util.Scanner;

public class Compress {
	public String solution(String s) {
		String answer="";
		s=s+" "; //(i+1)비교시 메모리 
		int cnt=1;
		for(int i=0; i<s.length()-1; i++) {
			if(s.charAt(i)==s.charAt(i+1)) cnt++;
			else {
				answer+=s.charAt(i);
				if(cnt>1) answer+=String.valueOf(cnt);
				cnt = 1;
			}
		}
		return answer;
	}
	public static void main(String[] args) {
		Compress T = new Compress();
		Scanner kb = new Scanner(System.in);
		String str = kb.next();
		System.out.println(T.solution(str));
	}
}
--------------------------------------------------------------
#)#은 1로 *은 0으로 읽고 십진수로 변환 후 아스키코드 대문자로 해석 (7개까지 끊어내야한다)
#)몇개의 문자인지도 인자로 넘겨야한다. (4개의 문자라면 7문자씩 4번씩끊어야된다)
package codingTest;

import java.util.Scanner;

public class Main {
	public String solution(String s, int n) {
		String answer="";
		for(int i=0; i<n; i++) {
			String tmp=s.substring(0,7).replace('#', '1').replace('*', '0');
			int num = Integer.parseInt(tmp,2); //넘어온 tmp 2진수를 10진수화시킨다.(67, 79, 79, 76)
			answer+=(char)num;
			System.out.println(tmp+" "+num);
			s=s.substring(7);
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt();
		String str = kb.next();
		System.out.println(T.solution(str,n));
	}
}
------------------------------------------------------------------------
해당프로젝트 폴더 압축후 조성동1A.zip으로 제출
package 평가1A;

import java.util.Scanner;
//사용자 입력은 거의 문자열이다. 체크박스를 체크해도
public class CardNumber {
	// 2720 9927 1182 8767
//변환 후 4740 9947 2172 7737 ---> 합 80
	
	// 6011 7338 9510 6094
//변환 후 3021 5368 9520 3094  --> 합 60

	// 3444 0639 1046 2763
//변환 후 6484 0669 2086 4733
	static boolean isValid(char[] arr) {
		if(arr.length != 16) {
			return false;
		}
		int sum = 0;
		//****-abcd 이런식으로 입력받는걸 방지하기 위해('0', '9'사이 범위 벗어나면)
		for(int i =0; i<arr.length; i++) {
			if('0'<arr[i] || arr[i]<'9') {
				return false;
			}
			int num = arr[i] - 48;
			if(i % 2 ==0) { //짝수번째는 곱하기2해서 판별
				num *= 2;
				if(num >= 10) {
					num = num / 10 + num % 10;
				}
			}
			sum += num;
		}
		
		return sum % 10 == 0;
	}
	

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String input,result;
		boolean valid;
		
		System.out.print("카드번호를 입력: ");
		input = sc.nextLine();
		input = input.replace("-", "");
		
		valid = isValid(input.toCharArray()); //char배열로 바꿔서 isValid함수로 char배열 넘겨줌
		
		result = input.substring(0,4) + "-" +
				 input.substring(0,4) + "-" +
				 input.substring(0,4) + "-" +
				 input.substring(12);
		System.out.println(valid ? "유효" : "유효하지 않음");
		sc.close();
	}
}
----------------------------------------------------------------------------------------------
package 평가1A;

public class StringMethod {
	public static void main(String[] args) {
		String str1 = "2720-9927-1182-8767";
		//제시한 글자를 기준으로 각 문자열을 분리하여 배열로 반환
		String[] split = str1.split("-"); 
		for(int i = 0; i<split.length; i++) {
			System.out.println(split[i]);
		}
		
		String str2 = "root:x:0:0:root:/root:/bin/bash";
		String[] split2 = str2.split(":");
		for(String s : split2) {
			System.out.println(s);
		}
		
		String str3 = "사과, 복숭아, 수박, 딸기, 포도, 오렌지";
		String[] split3 = str3.split(", ");
		for(String fruit : split3) {
			System.out.println(fruit);
		}
		
		//수박이 몇번째냐 9번째다 (사 부터 0이다)
		//제시한 내용이 문자열의 몇번째 인덱스에 위치하는가
		System.out.println(str3.indexOf("수박"));
		
		//제시한 내용이 없으면 -1 -> 이걸이용해서 특정문자열이 있는지도 확인한다
		System.out.println(str3.indexOf("바나나"));
		
		//제시한 내용을 포함하는지 boolean으로 반환 (false)
		System.out.println(str3.contains("바나나"));
		
		//문자열의 길이를 정수로 반환
		System.out.println(str3.length());
		
		//21번째 인덱스부터 끝까지
		System.out.println(str3.substring(21));
	
		//4부터 6까지(마지막은 포함하지 않음)
		System.out.println(str3.substring(4,7));
		
		//앞부분에 공통으로 포함되는 문자열이 있으면 앞쪽에서 특정 문자열을 제외시킬수 있다.
		String url = "http://www.naver.com";
		System.out.println(url.substring("http://".length()));
	
		//.html을 찾아서 .jsp로 변경
		String str4 = "home.html";
		System.out.println(str4.replace(".html", ".jsp"));
	
		//여기서중요한건 replace는 원본을 변경하지 않는다.
		System.out.println(str2.replace(":", "-"));
		
		//만약에 replace를 통해 원본을 바꾸려면 대입연산자를 통해 해야한다
		str2 = str2.replace(":", ".");
		System.out.println(str2);
		
		String str5 = String.format("%s님의 나이는 %d살입니다", "이지은",29);
		System.out.println(str5);
		
		System.out.println("Hello".equals("Hello"));
		
		//소문자, 대문자로 변환
		String str6 = "Apple";
		System.out.println(str6.toLowerCase());
		System.out.println(str6.toUpperCase());
	}	

}
------------------------------------------------------------------------------------------
package 평가1A;

import java.util.Scanner;

public class DeleteChar {
	static String solution(String new_id) {
		String answer = "";
		//1단계 new_id의 모든 대문자를 소문자로
		new_id = new_id.toLowerCase();
		//2단계 new_id에서 알파벳 소문자, 숫자, 뺴기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거
		String test = "abcdefghijklmnopqrstuvwxyz0123456789-_.";
		for(int i=0; i<new_id.length(); i++) {
			if(test.contains(new_id.charAt(i)+"")) { //빈문자열을 더하면 문자열이된다
				answer += new_id.charAt(i);
			}
		}
		//3단계 new_id에서 마침표(.)가 2번이상 연속된 부분을 하나의 마침표(.)로 치환
		while(answer.contains("..")) { //점이 3개이상이여도 while문을 통해 계속 실행 결국 마침표는 하나로된다.
			answer = answer.replace("..", ".");
		}
		//4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거
		if(answer.charAt(0)=='.') {
			answer = answer.substring(1);
		}
		if(answer.length() > 0 && answer.charAt(answer.length()-1)=='.') {
			answer = answer.substring(0,answer.length()-1);
		}
		//5단계 new_id가 빈문자열이라면, new_id에 "a"를 대입
		//변수와 상수간의 비교하면, 상수를 앞에다가 두자
		//만약에 if(answer.equals("")) answer가 null이면 equals라는 메소드가 호출이안된다.
		//상수는("") 항상 널이 아니다. 그러면 널포인터 예외가 발생안한다.
		if("".equals(answer)) { 
			answer="a";
		}
		//6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자모두 제거
		//제거 후 마침표(.)이 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자제거
		if(answer.length() >= 16) {
			answer=answer.substring(0,15);
		}
		if(answer.length()>0 && answer.charAt(answer.length()-1)=='.') {
			answer=answer.substring(0,answer.length()-1);
		}
		//7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이될때까지 반복해서 끝에 붙인다
		while(answer.length() <3) {
			answer += answer.charAt(answer.length()-1);
		}
		return answer;
	}
	public static void main(String[] args) {
		String input = "...!@BaT#*..y.abcdefghijklm";
		String expected="bat.y.abcdefghi";
		
		String result = solution(input);
		System.out.println(expected.equals(result));
	}

}
---------------------------------------------------------------------------------
#)n(1<=n<=100)개의 정수를 입력받아, 자신의 바로 앞 수 보다 큰 수만 출력(첫번째 수는 무조건 출력)

package codingTest;

import java.util.ArrayList;
import java.util.Scanner;

public class Main {
	public ArrayList<Integer> solution(int n, int[] arr) {
		ArrayList<Integer> answer = new ArrayList<>(); //최종결과 출력할 answer
		answer.add(arr[0]);
		for(int i = 1; i<n; i++) { //길이 5입력시 0 1 2 3 4 다 검사한다. i가 4(끝)까지
			if(arr[i]>arr[i-1]) answer.add(arr[i]);
		}
		
		return answer;
	}
	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt();
		int[] arr = new int[n];
		for(int i = 0; i<n; i++) {
			arr[i]=kb.nextInt();
		}
		for(int x : T.solution(n, arr)) {
			System.out.println(x+ " ");
		}
		
		kb.close();
	}
}
=========================================================================
#)보이는 학생
#)N명을 일렬로 세우는데 맨앞에 서있는 선생님이 볼수있는 학생의 수? (단, 앞에 학생들과 같으면 안되고 무조건 커야보인다)

package codingTest;

import java.util.Scanner;

public class Main {
	public int solution(int n, int[] arr) {
		int answer=1, max = arr[0];
		for(int i=1; i<n; i++) {
			if(arr[i]>max) {
				answer++;
				max=arr[i];
			}
		}
		
		return answer;
	}
	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt();
		int[] arr = new int[n];
		for(int i = 0; i<n; i++) {
			arr[i]=kb.nextInt();
		}
		System.out.print(T.solution(n,arr));
		kb.close();
	}
}
================================================================
#)가위, 바위, 보 
#)A와B가 가위바위보를 하는데 각각 가위 =1, 바위 = 2, 보 = 3 A가이기면 A
package codingTest;

import java.util.Scanner;

public class Main {
	public String solution(int n, int[] a, int[] b) {
		String answer="";
		for(int i = 0; i<n; i++) {
			//같으면 비긴다.
			if(a[i]==b[i]) answer+="D";
			//a가 이기는 경우 3가지
			//a가 가위, b가 보
			else if(a[i]==1 && b[i]==3) answer+="A";
			else if(a[i]==2 && b[i]==1) answer+="A";
			else if(a[i]==3 && b[i]==2) answer+="A";
			//b가 이기면
			else answer+="B";
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt(); //몇번의 가위바위보를 할지
		int[] a=new int[n];
		int[] b=new int[n];
		//A,B 가위바위보 입력
		for(int i = 0; i<n; i++) {
			a[i]=kb.nextInt();
		}
		for(int i = 0; i<n; i++) {
			b[i]=kb.nextInt();
		}
		//줄바꿔서 나오게끔
		//함수가 String으로 받아서 문자배열로 변환후 char x에 넣음
		for(char x : T.solution(n,a,b).toCharArray()) System.out.println(x);
		kb.close();
	}
}
===============================================
#)피보나치 수열
#)입력은 피보나치 수열의 총 항의 수다. 만약 7이 입력되면 1 1 2 3 5 8 13 을 출력하면 된다.
#)항의 수는 (3<=n<45)사이로 입력해야한다. (즉, 앞에 1 1 은 넣고시작)

package codingTest;

import java.util.Scanner;

public class Main {
	public int[] solution(int n) {
		int[] answer = new int[n];
		answer[0] = 1;
		answer[1] = 1;
		for(int i = 2; i<n; i++) {
			answer[i] = answer[i-2]+answer[i-1];
		}
		return answer;
	}
	
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n=kb.nextInt();
		for(int x : T.solution(n)) System.out.print(x + " ");
		
		
		kb.close();
	}
}
==============================
#)다른 풀이(배열을 쓰지않고)
class Main {
	public void solution(int n) {
		int a = 1, b = 1, c;
		System.out.print(a + " " + b + " ");
		for(int i = 2; i<n; i++) {
			c = a+b;
			System.out.print(c+ " ");
			a=b;
			b=c;
		}
	}
	public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int n = kb.nextInt();
		T.solution(n);
	}
	
}
=========================================================================
#)소수(에라토스테네스 체)
#)자연수 N이 입력되면 1부터 N까지 소수의 개수를 출력하는 프로그램을 작성

import java.util.*;
class Main {
	public int solution(int n) {
		int answer = 0;
		int[] ch = new int[n+1];
		for(int i=2; i<=n; i++) {
			if(ch[i]==0) {
				answer++;
				//인덱스의 배수들을 1로 채우기 (j=j+i) -> 배수
				for(int j=i; j<=n; j=j+i) ch[j]=1;
			}
		}
		return answer;
	}
public static void main(String[] args) {
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		int  n = kb.nextInt();
		System.out.println(T.solution(n));
	}
}
===============================================================================








